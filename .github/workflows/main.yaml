name: Build
on: [push]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - uses: actions/setup-node@v4
      with:
        node-version: 22
    - run: npm ci
    # - run: npm run lint

  build-cloudflare:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: cloudflare
    steps:
    - uses: actions/checkout@v4
    - uses: actions/setup-node@v4
      with:
        node-version: 22
    - run: npm ci
    - run: npm test
    - run: npm run lint-ci

  deploy-cloudflare:
    runs-on: ubuntu-latest
    needs: build-cloudflare
    permissions:
      deployments: write
    defaults:
      run:
        working-directory: cloudflare
    env:
      CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}
    steps:
    - uses: actions/checkout@v4
    - run: npm ci
    - run: npm run deploy -- --ci ${{ github.ref_name }}
      id: deploy
    - name: Create GitHub deployment
      uses: chrnorm/deployment-action@v2
      id: deployment
      with:
        token: '${{ github.token }}'
        environment: '${{ steps.deploy.outputs.env }}'
        environment-url: '${{ steps.deploy.outputs.url }}'
    - name: Update deployment status (success)
      uses: chrnorm/deployment-status@v2
      with:
        token: '${{ github.token }}'
        environment-url: ${{ steps.deployment.outputs.environment_url }}
        deployment-id: ${{ steps.deployment.outputs.deployment_id }}
        state: 'success'
